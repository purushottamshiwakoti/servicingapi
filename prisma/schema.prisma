// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  fullName   String
  email      String    @unique
  location   String
  password   String
  vehicle    Vehilce[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
}

model Vehilce {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  type       String
  number     String
  servicing  Servicing[]
  pickUp     PickUp[]
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  User       User?       @relation(fields: [userId], references: [id])
  userId     String?     @db.ObjectId
}

model Servicing {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  date       DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Vehilce    Vehilce? @relation(fields: [vehilceId], references: [id])
  vehilceId  String?  @db.ObjectId
}

model ServiceAreas {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model PickUp {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  date       DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Vehilce    Vehilce? @relation(fields: [vehilceId], references: [id])
  vehilceId  String?  @db.ObjectId
}
